/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/api/admin/auth/sign-up': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** Authentication */
    post: operations['UserAuthController_signUp']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/auth/login': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** Authentication */
    post: operations['UserAuthController_login']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/auth/_me': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Authentication */
    get: operations['UserAuthController_me']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/auth/edit-profile': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** Authentication */
    put: operations['UserAuthController_editProfile']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/auth/refresh': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** Authentication */
    post: operations['UserAuthController_refresh']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/auth/change-password': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** Authentication */
    put: operations['UserAuthController_changePassword']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/auth/change-avatar': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** Authentication */
    put: operations['UserAuthController_changeAvatar']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/auth/confirm-password': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** Authentication */
    post: operations['UserAuthController_confirmPassword']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/auth/change-confirm-password': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** Authentication */
    post: operations['UserAuthController_changeConfirmPassword']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/settings/core': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Setting */
    get: operations['SettingAdminController_getUserMaxCertificate']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/settings/clean': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Setting */
    get: operations['SettingAdminController_clean']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/settings': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Setting */
    get: operations['SettingAdminController_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/settings/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Setting */
    get: operations['SettingAdminController_get']
    /** Setting */
    put: operations['SettingAdminController_update']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/dashboard/view-summary': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Dashboard */
    get: operations['DashboardAdminController_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/dashboard/refresh-summary': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Dashboard */
    get: operations['DashboardAdminController_refresh']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/dashboard/view-data-list': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Dashboard */
    get: operations['DashboardAdminController_viewDataList']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/api-keys': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Api Key */
    get: operations['ApiKeyAdminController_list']
    put?: never
    /** Api Key */
    post: operations['ApiKeyAdminController_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/api-keys/map-shorted': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Api Key */
    get: operations['ApiKeyAdminController_mapShorted']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/api-keys/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Api Key */
    get: operations['ApiKeyAdminController_get']
    /** Api Key */
    put: operations['ApiKeyAdminController_update']
    post?: never
    /** Api Key */
    delete: operations['ApiKeyAdminController_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/api-keys/{id}/reset': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    /** Api Key */
    patch: operations['ApiKeyAdminController_reset']
    trace?: never
  }
  '/api/admin/api-keys/{id}/renew': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    /** Api Key */
    patch: operations['ApiKeyAdminController_renew']
    trace?: never
  }
  '/api/admin/api-keys/{id}/inactive': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** Api Key */
    put: operations['ApiKeyAdminController_inactive']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/api-keys/{id}/active': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** Api Key */
    put: operations['ApiKeyAdminController_active']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/app-versions': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Api Version */
    get: operations['AppVersionAdminController_list']
    put?: never
    /** Api Version */
    post: operations['AppVersionAdminController_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/app-versions/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Api Version */
    get: operations['AppVersionAdminController_get']
    /** Api Version */
    put: operations['AppVersionAdminController_update']
    post?: never
    /** Api Version */
    delete: operations['AppVersionAdminController_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/app-versions/{id}/inactive': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** Api Version */
    put: operations['AppVersionAdminController_inactive']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/app-versions/{id}/active': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** Api Version */
    put: operations['AppVersionAdminController_active']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/users': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** User */
    get: operations['UserAdminController_list']
    put?: never
    /** User */
    post: operations['UserAdminController_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/users/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** User */
    get: operations['UserAdminController_get']
    /** User */
    put: operations['UserAdminController_update']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/users/{id}/login-histories': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** User */
    get: operations['UserAdminController_getLoginHistories']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/users/{id}/change-avatar': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** User */
    put: operations['UserAdminController_changeAvatar']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/roles': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Role */
    get: operations['RoleAdminController_list']
    put?: never
    /** Role */
    post: operations['RoleAdminController_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/roles/map-shorted': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Role */
    get: operations['RoleAdminController_mapShorted']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/roles/new': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Role */
    get: operations['RoleAdminController_new']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/roles/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Role */
    get: operations['RoleAdminController_get']
    /** Role */
    put: operations['RoleAdminController_update']
    post?: never
    /** Role */
    delete: operations['RoleAdminController_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/roles/{id}/active': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** Role */
    put: operations['RoleAdminController_active']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/roles/{id}/inactive': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** Role */
    put: operations['RoleAdminController_inactive']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/permissions': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Permission */
    get: operations['PermissionAdminController_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/members': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Member */
    get: operations['MemberAdminController_list']
    put?: never
    /** Member */
    post: operations['MemberAdminController_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/members/map-shorted': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Member */
    get: operations['MemberAdminController_mapShorted']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/members/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Member */
    get: operations['MemberAdminController_get']
    /** Member */
    put: operations['MemberAdminController_put']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/members/{id}/inactive': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** Member */
    put: operations['MemberAdminController_inactive']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/members/{id}/active': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** Member */
    put: operations['MemberAdminController_active']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/members/{id}/change-avatar': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** Member */
    put: operations['MemberAdminController_update']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/members/{id}/points': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** Member */
    post: operations['MemberAdminController_addPoint']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/tier-histories': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Tier History */
    get: operations['TierHistoryAdminController_list']
    put?: never
    /** Tier History */
    post: operations['TierHistoryAdminController_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/tier-histories/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Tier History */
    get: operations['TierHistoryAdminController_get']
    /** Tier History */
    put: operations['TierHistoryAdminController_update']
    post?: never
    /** Tier History */
    delete: operations['TierHistoryAdminController_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/point-histories': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Point History */
    get: operations['PointHistoryAdminController_list']
    put?: never
    /** Point History */
    post: operations['PointHistoryAdminController_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/point-histories/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Point History */
    get: operations['PointHistoryAdminController_get']
    /** Point History */
    put: operations['PointHistoryAdminController_update']
    post?: never
    /** Point History */
    delete: operations['PointHistoryAdminController_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/product-histories': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Product History */
    get: operations['ProductHistoryAdminController_list']
    put?: never
    /** Product History */
    post: operations['ProductHistoryAdminController_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/product-histories/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Product History */
    get: operations['ProductHistoryAdminController_get']
    /** Product History */
    put: operations['ProductHistoryAdminController_update']
    post?: never
    /** Product History */
    delete: operations['ProductHistoryAdminController_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/products': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Product */
    get: operations['ProductAdminController_list']
    put?: never
    /** Product */
    post: operations['ProductAdminController_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/products/map-shorted': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Product */
    get: operations['ProductAdminController_mapShorted']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/products/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Product */
    get: operations['ProductAdminController_get']
    /** Product */
    put: operations['ProductAdminController_update']
    post?: never
    /** Product */
    delete: operations['ProductAdminController_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/product-brands': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Product Brand */
    get: operations['ProductBrandAdminController_list']
    put?: never
    /** Product Brand */
    post: operations['ProductBrandAdminController_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/product-brands/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Product Brand */
    get: operations['ProductBrandAdminController_get']
    /** Product Brand */
    put: operations['ProductBrandAdminController_update']
    post?: never
    /** Product Brand */
    delete: operations['ProductBrandAdminController_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/product-categories': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Product Category */
    get: operations['ProductCategoryAdminController_list']
    put?: never
    /** Product Category */
    post: operations['ProductCategoryAdminController_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/product-categories/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Product Category */
    get: operations['ProductCategoryAdminController_get']
    /** Product Category */
    put: operations['ProductCategoryAdminController_update']
    post?: never
    /** Product Category */
    delete: operations['ProductCategoryAdminController_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/product-reviews': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Product Review */
    get: operations['ProductReviewAdminController_list']
    put?: never
    /** Product Review */
    post: operations['ProductReviewAdminController_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/product-reviews/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Product Review */
    get: operations['ProductReviewAdminController_get']
    /** Product Review */
    put: operations['ProductReviewAdminController_update']
    post?: never
    /** Product Review */
    delete: operations['ProductReviewAdminController_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/facts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Fact */
    get: operations['FactAdminController_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/facts/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Fact */
    get: operations['FactAdminController_get']
    /** Fact */
    put: operations['FactAdminController_update']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/facts/{id}/active': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** Fact */
    put: operations['FactAdminController_active']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/facts/{id}/inactive': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** Fact */
    put: operations['FactAdminController_inactive']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/tiers': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Tier */
    get: operations['TierAdminController_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/tiers/map-shorted': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Tier */
    get: operations['TierAdminController_mapShorted']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/tiers/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Tier */
    get: operations['TierAdminController_get']
    /** Tier */
    put: operations['TierAdminController_update']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/orders': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Order */
    get: operations['OrderAdminController_list']
    put?: never
    /** Order */
    post: operations['OrderAdminController_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/orders/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Order */
    get: operations['OrderAdminController_get']
    /** Order */
    put: operations['OrderAdminController_update']
    post?: never
    /** Order */
    delete: operations['OrderAdminController_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/invoices': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Invoice */
    get: operations['InvoiceAdminController_list']
    put?: never
    /** Invoice */
    post: operations['InvoiceAdminController_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/invoices/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Invoice */
    get: operations['InvoiceAdminController_get']
    /** Invoice */
    put: operations['InvoiceAdminController_update']
    post?: never
    /** Invoice */
    delete: operations['InvoiceAdminController_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/notifications': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Notification */
    get: operations['NotificationAdminController_list']
    put?: never
    /** Notification */
    post: operations['NotificationAdminController_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/notifications/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Notification */
    get: operations['NotificationAdminController_get']
    /** Notification */
    put: operations['NotificationAdminController_update']
    post?: never
    /** Notification */
    delete: operations['NotificationAdminController_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/notifications/{id}/inactive': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** Notification */
    put: operations['NotificationAdminController_inactive']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/notifications/{id}/active': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** Notification */
    put: operations['NotificationAdminController_active']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/pushes': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Push */
    get: operations['PushAdminController_list']
    put?: never
    /** Push */
    post: operations['PushAdminController_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/pushes/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Push */
    get: operations['PushAdminController_get']
    /** Push */
    put: operations['PushAdminController_update']
    post?: never
    /** Push */
    delete: operations['PushAdminController_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/pushes/{id}/inactive': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** Push */
    put: operations['PushAdminController_inactive']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/pushes/{id}/active': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** Push */
    put: operations['PushAdminController_active']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/media': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Media */
    get: operations['MediaAdminController_list']
    put?: never
    /** Media */
    post: operations['MediaAdminController_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/media/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Media */
    get: operations['MediaAdminController_get']
    /** Media */
    put: operations['MediaAdminController_update']
    post?: never
    /** Media */
    delete: operations['MediaAdminController_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    ResponseMetadataDto: Record<string, never>
    ResponseDataDto: {
      /**
       * @description Return specific status code for every endpoints
       * @example true
       */
      success: boolean
      /**
       * @description Contain metadata about API
       * @example {
       *       "language": "en",
       *       "timestamp": 1660190937231,
       *       "timezone": "Asia/Ho_Chi_Minh",
       *       "version": "1",
       *       "path": "/api/v1/test/hello"
       *     }
       */
      metadata: components['schemas']['ResponseMetadataDto']
    }
    UserProfileResponseDto: {
      /** @example 1 */
      id: number
      /** @example  */
      email: string
    }
    UserRequestSignUpDto: {
      /** @example admin@example.com */
      email: string
      /** @example Leuschke */
      name: string
      /** @example 645 Mount Street */
      address: string
      /** Format: binary */
      avatar?: string
      /** @example admin123 */
      password: string
    }
    AuthAccessResponseDto: {
      /** @example Bearer */
      tokenType: string
      /**
       * @description Expire in timestamp
       * @example 1660190937231
       */
      expiresIn: number
      /**
       * @description Will be valid JWT Encode string
       * @example EqZMIgVY0eOFx7IwjzA2KcGSmI7kcv
       */
      accessToken: string
      /**
       * @description Will be valid JWT Encode string
       * @example f3pS7FYFVYbt1XcbuofaYOlax8nWmQ
       */
      refreshToken: string
    }
    UserRequestSignInDto: {
      /** @example admin@example.com */
      email: string
      /** @example admin123 */
      password: string
    }
    UserEditProfileRequestDto: {
      /** @example admin@example.com */
      email: string
      /** @example 85200000000 */
      phone?: string
      /** @example Leuschke */
      name: string
      /** @example 645 Mount Street */
      address: string
      /** @example true */
      isActive: boolean
      /** @example 1 */
      roleId: number
    }
    AuthRefreshResponseDto: {
      /** @example Bearer */
      tokenType: string
      /**
       * @description Expire in timestamp
       * @example 1660190937231
       */
      expiresIn: number
      /**
       * @description Will be valid JWT Encode string
       * @example EqZMIgVY0eOFx7IwjzA2KcGSmI7kcv
       */
      accessToken: string
      /**
       * @description Will be valid JWT Encode string
       * @example f3pS7FYFVYbt1XcbuofaYOlax8nWmQ
       */
      refreshToken: string
    }
    UserRequestChangePasswordDto: {
      /**
       * @description new string password, newPassword can't same with oldPassword
       * @example admin123
       */
      newPassword: string
      /**
       * @description old string password
       * @example admin123
       */
      oldPassword: string
    }
    UserRequestChangeAvatarDto: {
      /** Format: binary */
      avatar?: string
    }
    UserVerifyPasswordRequestDto: {
      /** @example admin123 */
      password: string
    }
    UserRequestChangeConfirmPasswordDto: {
      /**
       * @description new confirm password
       * @example admin123
       */
      password: string
    }
    SettingFileResponseDto: {
      sizeInBytes: number
    }
    SettingTimezoneResponseDto: {
      timezone: string
      timezoneOffset: string
    }
    SettingCoreResponseDto: {
      languages: ('en' | 'vi' | 'sc' | 'tc' | 'sc' | 'sc')[]
      file: components['schemas']['SettingFileResponseDto'] &
        components['schemas']['SettingFileResponseDto']
      timezone: components['schemas']['SettingTimezoneResponseDto'] &
        components['schemas']['SettingTimezoneResponseDto']
      token: string
    }
    ResponseListingMetadataDto: Record<string, never>
    ResponseListingDto: {
      /**
       * @description Return specific status code for every endpoints
       * @example true
       */
      success: boolean
      /**
       * @description Contain metadata about API
       * @example {
       *       "language": "en",
       *       "timestamp": 1660190937231,
       *       "timezone": "Asia/Ho_Chi_Minh",
       *       "appVersion": "1",
       *       "path": "/api/v1/test/hello",
       *       "availableSearch": [],
       *       "availableOrderBy": []
       *     }
       */
      metadata: components['schemas']['ResponseListingMetadataDto']
      /** @default [] */
      data: unknown[][]
    }
    SettingResponseListDto: {
      /** @example 1 */
      id: number
      /**
       * @description Name of setting
       * @example MaintenanceOn
       */
      name: string
      /**
       * @description Code of setting
       * @example MaintenanceOn
       */
      code: string
      /**
       * @description Description of setting
       * @example Maintenance Mode
       */
      description: string
      /**
       * @description Data type of setting
       * @example BOOLEAN
       * @enum {string}
       */
      type:
        | 'BOOLEAN'
        | 'YESNO'
        | 'ONOFF'
        | 'STRING'
        | 'NUMBER'
        | 'ARRAY_OF_STRING'
        | 'ARRAY_OF_NUMBER'
      /** @description Value of string, can be type string/boolean/number */
      value: Record<string, never> | Record<string, never> | Record<string, never>
      /**
       * Format: date-time
       * @description Date created at
       * @example 2025-04-08T10:39:53.523Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @description Date updated at
       * @example 2025-08-29T20:11:47.593Z
       */
      updatedAt: string
    }
    SettingResponseDetailDto: {
      /** @example 1 */
      id: number
      /**
       * @description Name of setting
       * @example MaintenanceOn
       */
      name: string
      /**
       * @description Code of setting
       * @example MaintenanceOn
       */
      code: string
      /**
       * @description Description of setting
       * @example Maintenance Mode
       */
      description: string
      /**
       * @description Data type of setting
       * @example BOOLEAN
       * @enum {string}
       */
      type:
        | 'BOOLEAN'
        | 'YESNO'
        | 'ONOFF'
        | 'STRING'
        | 'NUMBER'
        | 'ARRAY_OF_STRING'
        | 'ARRAY_OF_NUMBER'
      /** @description Value of string, can be type string/boolean/number */
      value: Record<string, never> | Record<string, never> | Record<string, never>
      /**
       * Format: date-time
       * @description Date created at
       * @example 2025-04-08T10:39:53.523Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @description Date updated at
       * @example 2025-08-29T20:11:47.593Z
       */
      updatedAt: string
    }
    SettingRequestUpdateDto: {
      /**
       * @example Maintenance Mode
       * @example Max Part Number Chunk File
       */
      description?: string
      /** @description The value of setting */
      value: string | number | boolean
      /** @description The refer of setting */
      refer: string | null
    }
    DashboardSummaryResponseDto: Record<string, never>
    ResponsePagingMetadataDto: Record<string, never>
    ResponsePagingDto: {
      /**
       * @description Return specific status code for every endpoints
       * @example true
       */
      success: boolean
      /**
       * @description Contain metadata about API
       * @example {
       *       "language": "en",
       *       "timestamp": 1660190937231,
       *       "timezone": "Asia/Ho_Chi_Minh",
       *       "version": "1",
       *       "path": "/api/v1/test/hello",
       *       "availableSearch": [],
       *       "availableOrderBy": [],
       *       "pagination": {
       *         "page": 1,
       *         "perPage": 50,
       *         "totalRecord": 100,
       *         "totalPage": 2
       *       }
       *     }
       */
      metadata: components['schemas']['ResponsePagingMetadataDto']
      /** @default [] */
      data: unknown[][]
    }
    UserBelongInfo: {
      /**
       * @description Id that representative with your target data
       * @example 11
       */
      id: number
      /**
       * @description Name that representative with your target data
       * @example Amparo80
       */
      name: string
    }
    ApiKeyResponseListDto: {
      /** @example 1 */
      id: number
      /**
       * @description Type of api key
       * @example CLIENT
       * @enum {string}
       */
      type: 'SYSTEM' | 'CLIENT' | 'DEFAULT'
      /**
       * @description Alias name of api key
       * @example Investor Factors Manager
       */
      name: string
      /**
       * @description Unique key of api key
       * @example PDSiBAuqPYvmhkJ
       */
      key: string
      /**
       * @description Hash key of api key
       * @example vCsJvLiDhrtcbczQKkxIaSOpyMpHVsMV
       */
      hash: string
      /** @example false */
      isDeprecated: boolean
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @description Api Key start date
       * @example 2025-03-03T16:13:03.097Z
       */
      startDate?: string
      /**
       * Format: date-time
       * @description Api Key end date
       * @example 2026-01-20T04:12:39.349Z
       */
      untilDate?: string
      /**
       * Format: date-time
       * @example 2025-08-09T22:52:30.442Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-29T22:40:01.062Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
    }
    ApiKeyResponseDetailDto: {
      /** @example 1 */
      id: number
      /**
       * @description Type of api key
       * @example CLIENT
       * @enum {string}
       */
      type: 'SYSTEM' | 'CLIENT' | 'DEFAULT'
      /**
       * @description Alias name of api key
       * @example Investor Factors Manager
       */
      name: string
      /**
       * @description Unique key of api key
       * @example PDSiBAuqPYvmhkJ
       */
      key: string
      /**
       * @description Hash key of api key
       * @example vCsJvLiDhrtcbczQKkxIaSOpyMpHVsMV
       */
      hash: string
      /** @example false */
      isDeprecated: boolean
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @description Api Key start date
       * @example 2025-03-03T16:13:03.097Z
       */
      startDate?: string
      /**
       * Format: date-time
       * @description Api Key end date
       * @example 2026-01-20T04:12:39.349Z
       */
      untilDate?: string
      /**
       * Format: date-time
       * @example 2025-08-09T22:52:30.442Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-29T22:40:01.062Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
    }
    ApiKeyRequestCreateDto: {
      /**
       * @description Api Key name
       * @example CLIENT
       * @enum {string}
       */
      type: 'SYSTEM' | 'CLIENT' | 'DEFAULT'
      /**
       * @description Api Key name
       * @example Heidenreich and Sons
       */
      name: string
      /**
       * Format: date-time
       * @description Api Key start date
       * @example 2025-08-29T21:22:50.284Z
       */
      startDate?: string
      /**
       * Format: date-time
       * @description Api Key end date
       * @example 2026-02-28T10:16:25.996Z
       */
      untilDate?: string
    }
    ApiKeyRequestUpdateDto: {
      /**
       * @description Api Key name
       * @example Heidenreich and Sons
       */
      name: string
      /**
       * Format: date-time
       * @description Api Key start date
       * @example 2025-08-29T21:22:50.284Z
       */
      startDate?: string
      /**
       * Format: date-time
       * @description Api Key end date
       * @example 2026-02-28T10:16:25.996Z
       */
      untilDate?: string
    }
    ApiKeyRequestRenewDto: {
      /**
       * Format: date-time
       * @description Api Key start date
       * @example 2025-08-29T10:33:54.285Z
       */
      startDate?: string
      /**
       * Format: date-time
       * @description Api Key end date
       * @example 2026-08-18T23:58:05.668Z
       */
      untilDate?: string
    }
    AppVersionResponseListDto: {
      /** @example 6 */
      id: number
      /**
       * @example IOS
       * @enum {string}
       */
      type: 'IOS' | 'AOS' | 'WEB'
      /** @example Api version name */
      name: string
      /** @example 0.0.1 */
      version: string
      /** @example https://regular-bob.net */
      url: string
      /** @example false */
      isForce: boolean
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @example 2025-01-14T17:19:52.620Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-29T16:19:58.701Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
    }
    AppVersionResponseDetailDto: {
      /** @example 6 */
      id: number
      /**
       * @example IOS
       * @enum {string}
       */
      type: 'IOS' | 'AOS' | 'WEB'
      /** @example Api version name */
      name: string
      /** @example 0.0.1 */
      version: string
      /** @example https://regular-bob.net */
      url: string
      /** @example false */
      isForce: boolean
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @example 2025-01-14T17:19:52.620Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-29T16:19:58.701Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
    }
    AppVersionRequestCreateDto: {
      /**
       * @description Api Key name
       * @example AOS
       * @enum {string}
       */
      type: 'IOS' | 'AOS' | 'WEB'
      /**
       * @description Api version name
       * @example AOS
       */
      name: string
      /**
       * @description Api version number
       * @example 0.0.1
       */
      version: string
      /**
       * @description Api share link
       * @example https://wrong-address.com
       */
      url: string
    }
    AppVersionRequestUpdateDto: {
      /**
       * @description Api version name
       * @example AOS
       */
      name: string
      /**
       * @description Api version number
       * @example 0.0.1
       */
      version: string
      /**
       * @description Api share link
       * @example https://wrong-address.com
       */
      url: string
    }
    UserResponseListDto: {
      /** @example 1 */
      id: number
      /** @example  */
      email: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
    }
    UserResponseDetailDto: {
      /** @example 1 */
      id: number
      /** @example  */
      email: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
    }
    UserResponseLoginHistoryDto: {
      /** @example 1 */
      id: number
    }
    UserRequestCreateDto: {
      /** @example admin@example.com */
      email: string
      /** @example 85200000000 */
      phone?: string
      /** @example Leuschke */
      name: string
      /** @example 645 Mount Street */
      address: string
      /** Format: binary */
      avatar?: string
      /** @example admin123 */
      password: string
      /** @example true */
      isActive: boolean
      /** @example 1 */
      roleId: number
    }
    UserRequestUpdateDto: {
      /** @example admin@example.com */
      email: string
      /** @example 85200000000 */
      phone?: string
      /** @example Leuschke */
      name: string
      /** @example 645 Mount Street */
      address: string
      /** @example true */
      isActive?: boolean
      /** @example 1 */
      roleId: number
      /** @example admin123 */
      password?: string
    }
    RoleResponseListDto: {
      /** @example 1 */
      id: number
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
    }
    RequestFilterDto: Record<string, never>
    RoleResponseDetailDto: {
      /** @example 1 */
      id: number
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
    }
    RolePermissionRequestCreateDto: {
      /** @enum {string} */
      subject:
        | 'DASHBOARD'
        | 'SETTING'
        | 'MEDIA'
        | 'API_KEY'
        | 'APP_VERSION'
        | 'ROLE'
        | 'PERMISSION'
        | 'USER'
        | 'FACT'
        | 'COUNTRY'
        | 'DISTRICT'
        | 'MEMBER'
        | 'TIER_HISTORY'
        | 'POINT_HISTORY'
        | 'NOTIFICATION_HISTORY'
        | 'PRODUCT'
        | 'PRODUCT_BRAND'
        | 'PRODUCT_CATEGORY'
        | 'PRODUCT_REVIEW'
        | 'PRODUCT_HISTORY'
        | 'CART'
        | 'INVOICE'
        | 'ORDER'
        | 'TIER'
        | 'NOTIFICATION'
        | 'PUSH'
        | 'PUSH_GROUP'
      actions: ('read' | 'create' | 'update' | 'delete' | 'export' | 'import')[]
    }
    RoleRequestUpdateDto: {
      /** @example ADMIN */
      title: string
      description?: Record<string, never>
      /** @example true */
      isActive: boolean
      permissions: components['schemas']['RolePermissionRequestCreateDto'][]
    }
    RoleRequestCreateDto: {
      /** @example ADMIN */
      title: string
      description?: Record<string, never>
      /** @example true */
      isActive: boolean
      permissions: components['schemas']['RolePermissionRequestCreateDto'][]
    }
    PermissionResponseListDto: {
      /** @example 1 */
      id: number
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
    }
    ResponseLocaleDto: {
      /** @example Tolero arbustum appositus super arma. */
      en: string
      /** @example Apostolus conqueror tabgo veritas spiritus sperno spoliatio perferendis nemo vitium. */
      vi: string
    }
    ResponseDataChartDto: {
      /** @example 5 */
      id: number
      /** @example 1 */
      currId: number
      /** @example 6 */
      nextId: number
      /** @example 7 */
      requireSpending: number
      /** @example true */
      isActive: boolean
    }
    TierResponseBelongDto: {
      /** @example 5 */
      id: number
      /** @example NORMAL */
      code: string
      name: components['schemas']['ResponseLocaleDto']
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
      charts: components['schemas']['ResponseDataChartDto'][]
    }
    MemberResponseListDto: {
      /** @example 14 */
      id: number
      /** @example 2 */
      tierId: number
      /** @example  */
      code: string
      /**
       * @example NORMAL
       * @enum {string}
       */
      type: 'STAFF' | 'NORMAL' | 'MASTER'
      /** @example  */
      cardId: string
      /** @example Pietro39@yahoo.com */
      email: string
      /** @example Balistreri */
      name: string
      /** @example  */
      phone: string
      /** @example en */
      locale: string
      /** @example 55585 Swift Mission */
      address: string
      /** @example  */
      referralCode: string
      /**
       * Format: date-time
       * @example null
       */
      birthDate: string
      /**
       * Format: date-time
       * @example null
       */
      expiryDate: string
      /** @example 0 */
      pointBalance: number
      /** @example 0 */
      maximumSpending: number
      /** @example 0 */
      personalSpending: number
      /** @example 0 */
      referralSpending: number
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @example 2025-08-29T16:21:44.600Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-31T04:06:39.893Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
      tier: components['schemas']['TierResponseBelongDto']
    }
    MemberResponseDetailDto: {
      /** @example 14 */
      id: number
      /** @example 2 */
      tierId: number
      /** @example  */
      code: string
      /**
       * @example NORMAL
       * @enum {string}
       */
      type: 'STAFF' | 'NORMAL' | 'MASTER'
      /** @example  */
      cardId: string
      /** @example Pietro39@yahoo.com */
      email: string
      /** @example Balistreri */
      name: string
      /** @example  */
      phone: string
      /** @example en */
      locale: string
      /** @example 55585 Swift Mission */
      address: string
      /** @example  */
      referralCode: string
      /**
       * Format: date-time
       * @example null
       */
      birthDate: string
      /**
       * Format: date-time
       * @example null
       */
      expiryDate: string
      /** @example 0 */
      pointBalance: number
      /** @example 0 */
      maximumSpending: number
      /** @example 0 */
      personalSpending: number
      /** @example 0 */
      referralSpending: number
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @example 2025-08-29T16:21:44.600Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-31T04:06:39.893Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
      tier: components['schemas']['TierResponseBelongDto']
    }
    MemberRequestCreateDto: {
      /** @example Langworth */
      name: string
      /** @example 84332170915 */
      phone: string
      /** @example nam.dinh@example.com */
      email?: string
      /** @example X5785184 */
      cardId?: string
      /** @example 903 Heller Ridge Suite 560 */
      address?: string
      /**
       * Format: date-time
       * @example 1983-10-14T16:59:39.862Z
       */
      birthDate?: string
      /** Format: binary */
      avatar?: string
      /**
       * @example en
       * @enum {string}
       */
      locale?: 'en' | 'vi' | 'zh_CN' | 'zh_HK' | 'zh_TW' | 'zh_MO'
      /** @example true */
      isActive: boolean
      /** @example admin123 */
      password: string
    }
    MemberRequestUpdateDto: {
      /** @example Langworth */
      name: string
      /** @example 84332170915 */
      phone: string
      /** @example nam.dinh@example.com */
      email?: string
      /** @example X5785184 */
      cardId?: string
      /** @example 903 Heller Ridge Suite 560 */
      address?: string
      /**
       * Format: date-time
       * @example 1983-10-14T16:59:39.862Z
       */
      birthDate?: string
      /**
       * @example en
       * @enum {string}
       */
      locale?: 'en' | 'vi' | 'zh_CN' | 'zh_HK' | 'zh_TW' | 'zh_MO'
      /** @example true */
      isActive: boolean
      /** @example admin123 */
      password: string
    }
    MemberChangeAvatarRequestDto: {
      /** Format: binary */
      avatar?: string
    }
    MemberAddPointRequestDto: {
      /** @example 1 */
      point: number
    }
    MemberResponseBelongDto: {
      /** @example 14 */
      id: number
      /** @example  */
      code: string
      /** @example Balistreri */
      name: string
      /** @example  */
      phone: string
    }
    ProductBrandResponseBelongDto: {
      /** @example 5 */
      id: number
      name: components['schemas']['ResponseLocaleDto']
      /** @example true */
      isActive: boolean
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
    }
    ProductCategoryResponseBelongDto: {
      /** @example 1 */
      id: number
      name: components['schemas']['ResponseLocaleDto']
      /** @example true */
      isActive: boolean
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
    }
    ProductResponseBelongDto: {
      /** @example 1 */
      id: number
      name: components['schemas']['ResponseLocaleDto']
      /** @example 0 */
      salePoint: number
      /** @example 100 */
      salePrice: number
      /** @example 99 */
      stockQty: number
      /** @example true */
      isActive: boolean
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
      brand: components['schemas']['ProductBrandResponseBelongDto']
      category: components['schemas']['ProductCategoryResponseBelongDto']
    }
    ResponseDataItemDto: {
      /** @example 1 */
      id: number
      /** @example 6 */
      orderId: number
      /** @example 8 */
      productId: number
      /** @example 10 */
      promotionId: number
      /** @example 0 */
      quantity: number
      /** @example 0 */
      unitPrice: number
      /** @example 0 */
      unitPoint: number
      /** @example 0 */
      finalPrice: number
      /** @example 0 */
      finalPoint: number
      /**
       * Format: date-time
       * @example 2024-09-06T02:09:33.008Z
       */
      expiryDate: string
      /**
       * Format: date-time
       * @example 2025-06-30T05:26:50.794Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-29T20:00:41.185Z
       */
      updatedAt: string
      product: components['schemas']['ProductResponseBelongDto']
    }
    OrderResponseDetailDto: {
      /** @example 5 */
      id: number
      /** @example  */
      code: string
      /** @example 4 */
      memberId: number
      /** @example 4 */
      promotionId: number
      /** @example  */
      totalPrice: number
      /** @example 2 */
      totalPoint: number
      /** @example  */
      discPrice: number
      /** @example 1 */
      discPoint: number
      /** @example 1 */
      finalPrice: number
      /** @example 10 */
      finalPoint: number
      /** @example SYSTEM */
      source: string
      /** @example DELIVERED */
      status: string
      /** @example true */
      isBirth: boolean
      /**
       * Format: date-time
       * @example 2025-03-11T19:01:26.973Z
       */
      issueDate: string
      /**
       * Format: date-time
       * @example 2025-05-14T13:13:02.559Z
       */
      issuedAt: string
      /**
       * Format: date-time
       * @example 2025-02-04T02:50:42.141Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-30T04:22:11.477Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
      member: components['schemas']['MemberResponseBelongDto']
      items: components['schemas']['ResponseDataItemDto'][]
    }
    InvoiceResponseBelongDto: {
      /** @example 1 */
      id: number
      /** @example  */
      code: string
      /** @example 3 */
      finalPrice: number
      /** @example 4 */
      finalPoint: number
      /** @example FULLY_PAID */
      status: string
      /**
       * Format: date-time
       * @example 2025-07-07T22:03:10.484Z
       */
      issueDate: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
      order: components['schemas']['OrderResponseDetailDto']
      member: components['schemas']['MemberResponseBelongDto']
    }
    TierHistoryResponseListDto: {
      /** @example 9 */
      id: number
      /** @example 6 */
      memberId: number
      /** @example 7 */
      invoiceId: number
      /** @example 1 */
      prevTierId: number
      /** @example 6 */
      currTierId: number
      /** @example 9 */
      minTierId: number
      /** @example SYSTEM */
      type: string
      /** @example 50.77 */
      maximumSpending: number
      /** @example 67.17 */
      personalSpending: number
      /** @example 13.18 */
      referralSpending: number
      /** @example 70.06 */
      excessSpending: number
      /** @example 53.8 */
      renewalSpending: number
      /** @example 80.3 */
      upgradeSpending: number
      /**
       * Format: date-time
       * @example 2025-02-02T00:54:45.889Z
       */
      expiryDate: string
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @example 2024-11-19T14:09:48.880Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-29T09:30:09.456Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
      member: components['schemas']['MemberResponseBelongDto']
      invoice: components['schemas']['InvoiceResponseBelongDto']
      prevTier: components['schemas']['TierResponseBelongDto']
      currTier: components['schemas']['TierResponseBelongDto']
    }
    TierHistoryResponseDetailDto: {
      /** @example 9 */
      id: number
      /** @example 6 */
      memberId: number
      /** @example 7 */
      invoiceId: number
      /** @example 1 */
      prevTierId: number
      /** @example 6 */
      currTierId: number
      /** @example 9 */
      minTierId: number
      /** @example SYSTEM */
      type: string
      /** @example 50.77 */
      maximumSpending: number
      /** @example 67.17 */
      personalSpending: number
      /** @example 13.18 */
      referralSpending: number
      /** @example 70.06 */
      excessSpending: number
      /** @example 53.8 */
      renewalSpending: number
      /** @example 80.3 */
      upgradeSpending: number
      /**
       * Format: date-time
       * @example 2025-02-02T00:54:45.889Z
       */
      expiryDate: string
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @example 2024-11-19T14:09:48.880Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-29T09:30:09.456Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
      member: components['schemas']['MemberResponseBelongDto']
      invoice: components['schemas']['InvoiceResponseBelongDto']
      prevTier: components['schemas']['TierResponseBelongDto']
      currTier: components['schemas']['TierResponseBelongDto']
    }
    TierHistoryRequestCreateDto: {
      /** @example 5933829225714968 */
      memberId: number
      /** @example 107404619110971 */
      prevTierId: number
      /** @example 5881769175894243 */
      currTierId: number
    }
    TierHistoryRequestUpdateDto: {
      /** @example 5933829225714968 */
      memberId: number
      /** @example 107404619110971 */
      prevTierId: number
      /** @example 5881769175894243 */
      currTierId: number
    }
    PointHistoryResponseListDto: {
      /** @example 1 */
      id: number
      /** @example 5 */
      tierId: number
      /** @example 1 */
      memberId: number
      /** @example 2 */
      refereeId: number
      /** @example 3 */
      invoiceId: number
      /** @example 5150 */
      invoiceAmount: number
      /** @example PURCHASE */
      type: string
      /** @example 849 */
      point: number
      /** @example 917 */
      pointBalance: number
      /** @example 0.2862223946911101 */
      multipleRatio: number
      /** @example false */
      isFirst: boolean
      /** @example false */
      isBirth: boolean
      /** @example false */
      isPending: boolean
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @example 2025-04-16T16:01:25.658Z
       */
      expiryDate: string
      /**
       * Format: date-time
       * @example 2026-05-29T11:02:31.268Z
       */
      releaseDate: string
      /**
       * Format: date-time
       * @example 2025-06-27T23:26:21.207Z
       */
      createdDate: string
      /**
       * Format: date-time
       * @example 2025-03-20T04:45:50.127Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-29T15:58:58.475Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
      tier: components['schemas']['TierResponseBelongDto']
      member: components['schemas']['MemberResponseBelongDto']
      referee: components['schemas']['MemberResponseBelongDto']
      invoice: components['schemas']['InvoiceResponseBelongDto']
    }
    PointHistoryResponseDetailDto: {
      /** @example 1 */
      id: number
      /** @example 5 */
      tierId: number
      /** @example 1 */
      memberId: number
      /** @example 2 */
      refereeId: number
      /** @example 3 */
      invoiceId: number
      /** @example 5150 */
      invoiceAmount: number
      /** @example PURCHASE */
      type: string
      /** @example 849 */
      point: number
      /** @example 917 */
      pointBalance: number
      /** @example 0.2862223946911101 */
      multipleRatio: number
      /** @example false */
      isFirst: boolean
      /** @example false */
      isBirth: boolean
      /** @example false */
      isPending: boolean
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @example 2025-04-16T16:01:25.658Z
       */
      expiryDate: string
      /**
       * Format: date-time
       * @example 2026-05-29T11:02:31.268Z
       */
      releaseDate: string
      /**
       * Format: date-time
       * @example 2025-06-27T23:26:21.207Z
       */
      createdDate: string
      /**
       * Format: date-time
       * @example 2025-03-20T04:45:50.127Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-29T15:58:58.475Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
      tier: components['schemas']['TierResponseBelongDto']
      member: components['schemas']['MemberResponseBelongDto']
      referee: components['schemas']['MemberResponseBelongDto']
      invoice: components['schemas']['InvoiceResponseBelongDto']
    }
    PointHistoryRequestCreateDto: {
      /** @example 3152384184684328 */
      memberId: number
      /** @example 8905804810674676 */
      point: number
    }
    PointHistoryRequestUpdateDto: {
      /** @example 3152384184684328 */
      memberId: number
      /** @example 8905804810674676 */
      point: number
    }
    OrderResponseBelongDto: {
      /** @example 5 */
      id: number
      /** @example  */
      code: string
      /** @example  */
      totalPrice: number
      /** @example 2 */
      totalPoint: number
      /** @example  */
      discPrice: number
      /** @example 1 */
      discPoint: number
      /** @example 1 */
      finalPrice: number
      /** @example 10 */
      finalPoint: number
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
      member: components['schemas']['MemberResponseBelongDto']
      items: components['schemas']['ResponseDataItemDto'][]
    }
    ProductHistoryResponseListDto: {
      /** @example 10 */
      id: number
      /** @example 3 */
      memberId: number
      /** @example 9 */
      productId: number
      /** @example 4 */
      orderId: number
      /** @example 3 */
      promotionId: number
      /** @example 600.9329381176551 */
      redeemPrice: number
      /** @example 98 */
      redeemPoint: number
      /** @example ORDER */
      source: string
      /** @example APPROVED */
      status: string
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @example 2024-09-08T13:06:12.072Z
       */
      startDate: string
      /**
       * Format: date-time
       * @example 2026-07-09T11:13:31.600Z
       */
      untilDate: string
      /**
       * Format: date-time
       * @example 2025-12-24T04:00:41.423Z
       */
      expiryDate: string
      /**
       * Format: date-time
       * @example 2025-01-04T10:25:23.539Z
       */
      issuedDate: string
      /**
       * Format: date-time
       * @example 2025-08-10T15:12:45.731Z
       */
      usedDate: string
      /**
       * Format: date-time
       * @example 2024-11-29T06:19:12.056Z
       */
      usedAt: string
      /**
       * Format: date-time
       * @example 2025-08-19T08:52:27.086Z
       */
      issuedAt: string
      /**
       * Format: date-time
       * @example 2025-04-09T11:02:44.597Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-30T02:06:07.468Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
      member: components['schemas']['MemberResponseBelongDto']
      product: components['schemas']['ProductResponseBelongDto']
      order: components['schemas']['OrderResponseBelongDto']
    }
    ProductHistoryResponseDetailDto: {
      /** @example 10 */
      id: number
      /** @example 3 */
      memberId: number
      /** @example 9 */
      productId: number
      /** @example 4 */
      orderId: number
      /** @example 3 */
      promotionId: number
      /** @example 600.9329381176551 */
      redeemPrice: number
      /** @example 98 */
      redeemPoint: number
      /** @example ORDER */
      source: string
      /** @example APPROVED */
      status: string
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @example 2024-09-08T13:06:12.072Z
       */
      startDate: string
      /**
       * Format: date-time
       * @example 2026-07-09T11:13:31.600Z
       */
      untilDate: string
      /**
       * Format: date-time
       * @example 2025-12-24T04:00:41.423Z
       */
      expiryDate: string
      /**
       * Format: date-time
       * @example 2025-01-04T10:25:23.539Z
       */
      issuedDate: string
      /**
       * Format: date-time
       * @example 2025-08-10T15:12:45.731Z
       */
      usedDate: string
      /**
       * Format: date-time
       * @example 2024-11-29T06:19:12.056Z
       */
      usedAt: string
      /**
       * Format: date-time
       * @example 2025-08-19T08:52:27.086Z
       */
      issuedAt: string
      /**
       * Format: date-time
       * @example 2025-04-09T11:02:44.597Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-30T02:06:07.468Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
      member: components['schemas']['MemberResponseBelongDto']
      product: components['schemas']['ProductResponseBelongDto']
      order: components['schemas']['OrderResponseBelongDto']
    }
    ProductHistoryRequestCreateDto: {
      /** @example 1 */
      memberId: number
      /** @example 8 */
      productId: number
    }
    ProductHistoryRequestUpdateDto: {
      /** @example 1 */
      memberId: number
      /** @example 8 */
      productId: number
    }
    ProductResponseListDto: {
      /** @example 1 */
      id: number
      /** @example 1 */
      brandId: number
      /** @example 1 */
      categoryId: number
      /** @example P01 */
      sku: string
      /** @example https://picsum.photos/seed/P874Ar/3418/59 */
      thumbnail: string
      name: components['schemas']['ResponseLocaleDto']
      content: components['schemas']['ResponseLocaleDto'][]
      termAndCond: components['schemas']['ResponseLocaleDto'][]
      /** @example 0 */
      salePoint: number
      /** @example 100 */
      salePrice: number
      /** @example 100 */
      costPrice: number
      /** @example 99 */
      stockQty: number
      /** @example 0 */
      paidQty: number
      /** @example 0 */
      unpaidQty: number
      /** @example 10 */
      salePerPerson: number
      /** @example 0 */
      sorting: number
      /** @example 0 */
      duePaidDays: number
      /**
       * @example STATIC
       * @enum {string}
       */
      expiryType: 'STATIC' | 'DYNAMIC'
      /** @example 0 */
      dynamicExpiryDays: number
      /** @example 2026-06-01T09:02:18.823Z */
      dynamicExpiryDate: string
      /** @example 2026-08-13T10:50:57.477Z */
      staticExpiryDate: string
      /** @example true */
      hasShipment: boolean
      /** @example true */
      hasInventory: boolean
      /** @example true */
      hasExpiration: boolean
      /** @example true */
      hasDuePayment: boolean
      /** @example true */
      hasLimitPerson: boolean
      /** @example true */
      isPopular: boolean
      /** @example true */
      isBestSale: boolean
      /** @example true */
      isFlashSale: boolean
      /** @example true */
      isComingSoon: boolean
      /** @example true */
      isNewArrival: boolean
      /** @example true */
      isWishlisted: boolean
      /** @example true */
      isActive: boolean
      /** @example false */
      isDeleted: boolean
      /**
       * Format: date-time
       * @example 2025-08-30T07:14:50.833Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-31T04:37:20.838Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
      brand: components['schemas']['ProductBrandResponseBelongDto']
      category: components['schemas']['ProductCategoryResponseBelongDto']
    }
    ProductResponseDetailDto: {
      /** @example 1 */
      id: number
      /** @example 1 */
      brandId: number
      /** @example 1 */
      categoryId: number
      /** @example P01 */
      sku: string
      /** @example https://picsum.photos/seed/P874Ar/3418/59 */
      thumbnail: string
      name: components['schemas']['ResponseLocaleDto']
      content: components['schemas']['ResponseLocaleDto'][]
      termAndCond: components['schemas']['ResponseLocaleDto'][]
      /** @example 0 */
      salePoint: number
      /** @example 100 */
      salePrice: number
      /** @example 100 */
      costPrice: number
      /** @example 99 */
      stockQty: number
      /** @example 0 */
      paidQty: number
      /** @example 0 */
      unpaidQty: number
      /** @example 10 */
      salePerPerson: number
      /** @example 0 */
      sorting: number
      /** @example 0 */
      duePaidDays: number
      /**
       * @example STATIC
       * @enum {string}
       */
      expiryType: 'STATIC' | 'DYNAMIC'
      /** @example 0 */
      dynamicExpiryDays: number
      /** @example 2026-06-01T09:02:18.823Z */
      dynamicExpiryDate: string
      /** @example 2026-08-13T10:50:57.477Z */
      staticExpiryDate: string
      /** @example true */
      hasShipment: boolean
      /** @example true */
      hasInventory: boolean
      /** @example true */
      hasExpiration: boolean
      /** @example true */
      hasDuePayment: boolean
      /** @example true */
      hasLimitPerson: boolean
      /** @example true */
      isPopular: boolean
      /** @example true */
      isBestSale: boolean
      /** @example true */
      isFlashSale: boolean
      /** @example true */
      isComingSoon: boolean
      /** @example true */
      isNewArrival: boolean
      /** @example true */
      isWishlisted: boolean
      /** @example true */
      isActive: boolean
      /** @example false */
      isDeleted: boolean
      /**
       * Format: date-time
       * @example 2025-08-30T07:14:50.833Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-31T04:37:20.838Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
      brand: components['schemas']['ProductBrandResponseBelongDto']
      category: components['schemas']['ProductCategoryResponseBelongDto']
    }
    RequestSentenceDto: {
      /** @example Aeternus cupio surculus vorago minima. */
      en: string
      /** @example Amissio tyrannus suscipio curso catena conicio agnosco vaco adinventitias cattus. */
      vi: string
    }
    RequestParagraphDto: {
      /** @example Tergum audeo subiungo suffoco. Suus volo ater voluntarius vereor spes terreo temperantia acidus. Omnis supplanto itaque defessus adopto. */
      en: string
      /** @example Coaegresco vociferor volup eveniet thesaurus labore conor viriliter. Timidus subito adstringo laudantium adsuesco conturbo pecco acsi. Cunabula crudelis alias cunctatio. */
      vi: string
    }
    ProductRequestUpdateDto: {
      /** @example 1 */
      brandId: number
      /** @example 1 */
      categoryId: number
      name: components['schemas']['RequestSentenceDto']
      termAndCond: components['schemas']['RequestParagraphDto']
      content: components['schemas']['RequestParagraphDto']
      /** @example 0 */
      sorting: number
      /** @example 100 */
      salePoint: number
      /** @example 100 */
      salePrice: number
      /** @example 100 */
      costPrice: number
      /** @example 99 */
      stockQty: number
      /** @example 0 */
      salePerPerson: number
      /** @example 1 */
      duePaidDays: number
      /**
       * @example STATIC
       * @enum {string}
       */
      expiryType: 'STATIC' | 'DYNAMIC'
      /** @example 7 */
      dynamicExpiryDays?: number
      /**
       * Format: date-time
       * @example 2026-06-12T17:47:11.372Z
       */
      staticExpiryDate?: string
      /** @example false */
      hasShipment?: boolean
      /** @example false */
      hasInventory?: boolean
      /** @example false */
      hasExpiration?: boolean
      /** @example false */
      hasDuePayment?: boolean
      /** @example false */
      hasLimitPerson?: boolean
      /** @example false */
      isPopular?: boolean
      /** @example false */
      isBestSale?: boolean
      /** @example false */
      isFlashSale?: boolean
      /** @example false */
      isComingSoon?: boolean
      /** @example false */
      isNewArrival?: boolean
      /** @example false */
      isActive?: boolean
      /** Format: binary */
      thumbnail?: string
    }
    ProductRequestCreateDto: {
      /** @example 1 */
      brandId: number
      /** @example 1 */
      categoryId: number
      /** @example P0062 */
      sku: string
      name: components['schemas']['RequestSentenceDto']
      termAndCond: components['schemas']['RequestParagraphDto']
      content: components['schemas']['RequestParagraphDto']
      /** @example 0 */
      sorting: number
      /** @example 100 */
      salePoint: number
      /** @example 100 */
      salePrice: number
      /** @example 100 */
      costPrice: number
      /** @example 99 */
      stockQty: number
      /** @example 0 */
      salePerPerson: number
      /** @example 1 */
      duePaidDays: number
      /**
       * @example STATIC
       * @enum {string}
       */
      expiryType: 'STATIC' | 'DYNAMIC'
      /** @example 7 */
      dynamicExpiryDays?: number
      /**
       * Format: date-time
       * @example 2026-06-12T17:47:11.372Z
       */
      staticExpiryDate?: string
      /** @example false */
      hasShipment?: boolean
      /** @example false */
      hasInventory?: boolean
      /** @example false */
      hasExpiration?: boolean
      /** @example false */
      hasDuePayment?: boolean
      /** @example false */
      hasLimitPerson?: boolean
      /** @example false */
      isPopular?: boolean
      /** @example false */
      isBestSale?: boolean
      /** @example false */
      isFlashSale?: boolean
      /** @example false */
      isComingSoon?: boolean
      /** @example false */
      isNewArrival?: boolean
      /** @example false */
      isActive?: boolean
      /** Format: binary */
      thumbnail?: string
    }
    ProductBrandResponseListDto: {
      /** @example 5 */
      id: number
      name: components['schemas']['ResponseLocaleDto']
      /** @example  */
      thumbnail: string
      /** @example  */
      address: string
      /** @example 0 */
      latitude: number
      /** @example 0 */
      longitude: string
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @example 2025-02-21T08:18:03.256Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-30T01:55:21.328Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
    }
    ProductBrandResponseDetailDto: {
      /** @example 5 */
      id: number
      name: components['schemas']['ResponseLocaleDto']
      /** @example  */
      thumbnail: string
      /** @example  */
      address: string
      /** @example 0 */
      latitude: number
      /** @example 0 */
      longitude: string
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @example 2025-02-21T08:18:03.256Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-30T01:55:21.328Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
    }
    ProductBrandRequestCreateDto: {
      name: components['schemas']['RequestSentenceDto']
      /** @example false */
      isActive?: boolean
    }
    ProductBrandRequestUpdateDto: {
      name: components['schemas']['RequestSentenceDto']
      /** @example false */
      isActive?: boolean
    }
    ProductCategoryResponseListDto: {
      /** @example 1 */
      id: number
      name: components['schemas']['ResponseLocaleDto']
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @example 2025-04-12T18:49:21.597Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-29T10:22:58.569Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
    }
    ProductCategoryResponseDetailDto: {
      /** @example 1 */
      id: number
      name: components['schemas']['ResponseLocaleDto']
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @example 2025-04-12T18:49:21.597Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-29T10:22:58.569Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
    }
    ProductCategoryRequestCreateDto: {
      name: components['schemas']['RequestSentenceDto']
      /** @example false */
      isActive?: boolean
    }
    ProductCategoryRequestUpdateDto: {
      name: components['schemas']['RequestSentenceDto']
      /** @example false */
      isActive?: boolean
    }
    ProductReviewResponseListDto: {
      /** @example 1 */
      id: number
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @example 2025-04-21T22:01:38.645Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-30T05:50:15.716Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
    }
    ProductReviewResponseDetailDto: {
      /** @example 1 */
      id: number
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @example 2025-04-21T22:01:38.645Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-30T05:50:15.716Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
    }
    ProductReviewRequestCreateDto: {
      /** @example 1 */
      productId: number
      /** @example 1 */
      memberId: number
      /** @example  */
      comment: string
    }
    ProductReviewRequestUpdateDto: {
      /** @example 1 */
      productId: number
      /** @example 1 */
      memberId: number
      /** @example  */
      comment: string
    }
    FactResponseListDto: {
      /** @example 1 */
      id: number
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
    }
    FactResponseDetailDto: {
      /** @example 1 */
      id: number
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
    }
    FactRequestUpdateDto: {
      title: components['schemas']['RequestSentenceDto']
      content: components['schemas']['RequestSentenceDto']
      /** Format: binary */
      thumbnail?: string
    }
    TierResponseListDto: {
      /** @example 5 */
      id: number
      /** @example NORMAL */
      code: string
      name: components['schemas']['ResponseLocaleDto']
      description: components['schemas']['ResponseLocaleDto'][]
      /** @example 0 */
      rewardPoint: number
      /** @example 0 */
      limitSpending: number
      /** @example 0 */
      personalRate: number
      /** @example 0 */
      referralRate: number
      /** @example 0 */
      initialRate: number
      /** @example 0 */
      birthdayRatio: number
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
      charts: components['schemas']['ResponseDataChartDto'][]
    }
    TierResponseDetailDto: {
      /** @example 5 */
      id: number
      /** @example NORMAL */
      code: string
      name: components['schemas']['ResponseLocaleDto']
      description: components['schemas']['ResponseLocaleDto'][]
      /** @example 0 */
      rewardPoint: number
      /** @example 0 */
      limitSpending: number
      /** @example 0 */
      personalRate: number
      /** @example 0 */
      referralRate: number
      /** @example 0 */
      initialRate: number
      /** @example 0 */
      birthdayRatio: number
      /** @example null */
      cardIcon: string
      /** @example null */
      cardImage: string
      /** @example null */
      cardCover: string
      /**
       * Format: date-time
       * @example 2025-01-21T05:47:13.533Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-30T02:09:20.497Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
      charts: components['schemas']['ResponseDataChartDto'][]
    }
    TierRequestUpdateDto: {
      name: components['schemas']['RequestSentenceDto']
      description: components['schemas']['RequestSentenceDto']
      /** @example 0 */
      rewardPoint: number
      /** @example 1 */
      birthdayRatio: number
      /** @example 0 */
      limitSpending: number
      /** @example 10000 */
      initialRate: number
      /** @example 10000 */
      personalRate: number
      /** @example 10000 */
      referralRate: number
    }
    OrderResponseListDto: {
      /** @example 5 */
      id: number
      /** @example  */
      code: string
      /** @example 4 */
      memberId: number
      /** @example 4 */
      promotionId: number
      /** @example  */
      totalPrice: number
      /** @example 2 */
      totalPoint: number
      /** @example  */
      discPrice: number
      /** @example 1 */
      discPoint: number
      /** @example 1 */
      finalPrice: number
      /** @example 10 */
      finalPoint: number
      /** @example SYSTEM */
      source: string
      /** @example DELIVERED */
      status: string
      /** @example true */
      isBirth: boolean
      /**
       * Format: date-time
       * @example 2025-03-11T19:01:26.973Z
       */
      issueDate: string
      /**
       * Format: date-time
       * @example 2025-05-14T13:13:02.559Z
       */
      issuedAt: string
      /**
       * Format: date-time
       * @example 2025-02-04T02:50:42.141Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-30T04:22:11.477Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
      member: components['schemas']['MemberResponseBelongDto']
      items: components['schemas']['ResponseDataItemDto'][]
    }
    OrderRequestCreateDto: {
      /** @example 1 */
      memberId: number
      /** @example 1 */
      orderId: number
    }
    OrderRequestUpdateDto: {
      /** @example 1 */
      memberId: number
      /** @example 1 */
      orderId: number
    }
    InvoiceResponseListDto: {
      /** @example 1 */
      id: number
      /** @example  */
      code: string
      /** @example 4 */
      memberId: number
      /** @example 9 */
      orderId: number
      /** @example 6 */
      promotionId: number
      /** @example  */
      invoiceRef: string
      /** @example  */
      invoicePath: string
      /** @example 9 */
      paidPrice: number
      /** @example 9 */
      paidPoint: number
      /** @example 3 */
      finalPrice: number
      /** @example 4 */
      finalPoint: number
      /** @example FULLY_PAID */
      status: string
      /** @example true */
      isBirth: boolean
      /** @example true */
      isEarned: boolean
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @example 2025-11-15T13:25:50.488Z
       */
      dueDate: string
      /**
       * Format: date-time
       * @example 2025-07-07T22:03:10.484Z
       */
      issueDate: string
      /**
       * Format: date-time
       * @example 2024-11-18T00:28:35.806Z
       */
      issuedAt: string
      /**
       * Format: date-time
       * @example 2025-04-01T12:59:08.850Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-29T19:50:02.072Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
      order: components['schemas']['OrderResponseDetailDto']
      member: components['schemas']['MemberResponseBelongDto']
    }
    InvoiceResponseDetailDto: {
      /** @example 1 */
      id: number
      /** @example  */
      code: string
      /** @example 4 */
      memberId: number
      /** @example 9 */
      orderId: number
      /** @example 6 */
      promotionId: number
      /** @example  */
      invoiceRef: string
      /** @example  */
      invoicePath: string
      /** @example 9 */
      paidPrice: number
      /** @example 9 */
      paidPoint: number
      /** @example 3 */
      finalPrice: number
      /** @example 4 */
      finalPoint: number
      /** @example FULLY_PAID */
      status: string
      /** @example true */
      isBirth: boolean
      /** @example true */
      isEarned: boolean
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @example 2025-11-15T13:25:50.488Z
       */
      dueDate: string
      /**
       * Format: date-time
       * @example 2025-07-07T22:03:10.484Z
       */
      issueDate: string
      /**
       * Format: date-time
       * @example 2024-11-18T00:28:35.806Z
       */
      issuedAt: string
      /**
       * Format: date-time
       * @example 2025-04-01T12:59:08.850Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-29T19:50:02.072Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
      order: components['schemas']['OrderResponseDetailDto']
      member: components['schemas']['MemberResponseBelongDto']
    }
    InvoiceRequestCreateDto: {
      /** @example 1 */
      memberId: number
      /** @example 1 */
      orderId: number
    }
    InvoiceRequestUpdateDto: {
      /** @example 1 */
      memberId: number
      /** @example 1 */
      orderId: number
    }
    PushResponseBelongDto: {
      /** @example 2 */
      id: number
      /** @example 5 */
      notificationId: number
      /** @example DAILY */
      type: string
      /** @example COMPLETED */
      status: string
      /** @example 2025-08-17T12:55:21.604Z */
      executeTime: string
      /** @example 2025-08-08T05:07:12.357Z */
      executeDate: string
      /** @example 1 */
      weekday: number
      /** @example 1 */
      day: number
      /** @example 1 */
      month: number
      /**
       * Format: date-time
       * @example 2025-05-25T15:41:43.175Z
       */
      startDate: string
      /**
       * Format: date-time
       * @example 2025-01-02T23:18:49.682Z
       */
      untilDate: string
      /** @example 1 */
      retries: number
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @example 2026-01-02T05:38:55.556Z
       */
      expiresAt: string
      /**
       * Format: date-time
       * @example 2025-11-20T12:49:02.390Z
       */
      scheduledAt: string
      /**
       * Format: date-time
       * @example 2025-07-13T01:58:28.609Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-29T07:25:19.037Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
      notification: Record<string, never>
    }
    ResponseGroupRelationDto: {
      /** @example 8 */
      id: number
      title: components['schemas']['ResponseLocaleDto']
      /** @example [] */
      tierIds: string[]
      /** @example [] */
      emails: string[]
      /** @example [] */
      phones: string[]
      /** @example 2024-12-05T21:09:59.836Z */
      joinSinceDate: string[]
      /** @example 2025-08-08T14:59:23.039Z */
      joinUntilDate: string[]
    }
    NotificationResponseListDto: {
      /** @example 5 */
      id: number
      /** @example SMS */
      channel: string
      /** @example TEXT */
      type: string
      /** @example 2 */
      refId: number
      /** @example TEXT */
      refType: string
      title: components['schemas']['ResponseLocaleDto']
      description: components['schemas']['ResponseLocaleDto']
      content: components['schemas']['ResponseLocaleDto']
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @example 2025-03-25T08:35:48.261Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-29T08:28:06.771Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
      pushes: components['schemas']['PushResponseBelongDto'][]
      groups: components['schemas']['ResponseGroupRelationDto'][]
    }
    NotificationResponseDetailDto: {
      /** @example 5 */
      id: number
      /** @example SMS */
      channel: string
      /** @example TEXT */
      type: string
      /** @example 2 */
      refId: number
      /** @example TEXT */
      refType: string
      title: components['schemas']['ResponseLocaleDto']
      description: components['schemas']['ResponseLocaleDto']
      content: components['schemas']['ResponseLocaleDto']
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @example 2025-03-25T08:35:48.261Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-29T08:28:06.771Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
      pushes: components['schemas']['PushResponseBelongDto'][]
      groups: components['schemas']['ResponseGroupRelationDto'][]
    }
    RequestContentDto: {
      /** @example <p>Aestas creator adnuo coepi peccatus antea. Vere solvo esse curis civitas. Tristis iusto aequitas vulgo colo velit aggredior fugiat.</p>Dolorem defendo casso. Crustulum repudiandae coerceo dolorum ratione viscus denuncio vindico teneo sublime. Quae creptio ver coepi acer delibero vilis anser.</p>Territo tolero nemo aufero vorago vomer somnus. Cunae spero tui corrigo corroboro aeger caput. Aspernatur aqua bardus collum cubicularis magni.</p>Catena vinco sol saepe urbanus. Damno curiositas optio consequuntur facere cognatus. Contra ancilla vomito umbra amplitudo spes autus testimonium somnus colo.</p> */
      en: string
      /** @example <p>Autus tribuo vinitor deludo. Tracto verbum amita totus utrum accedo thymbra ustulo volo. Ars accusator compono vix ceno acerbitas cubitum.</p>Timidus blandior verbera. Taedium quod fugiat deduco eveniet repudiandae statim textilis. Adsuesco cupio corrigo alii vapulus ventito ventito antiquus.</p>Vinitor acidus tempus audentia turba accendo territo. Tabernus necessitatibus adhuc vobis denique. Coaegresco acquiro amicitia comburo defleo conforto peccatus nihil villa altus.</p>Videlicet capillus laudantium degusto adsidue ventus consequatur vetus decretum corrumpo. Blanditiis utroque bellicus commodo terreo accendo traho sulum. Decimus vomer tutamen.</p> */
      vi: string
    }
    NotificationPushCreateDto: {
      /**
       * @example INSTANT
       * @enum {string}
       */
      type: 'INSTANT' | 'DATETIME' | 'DAILY' | 'WEEKLY' | 'MONTHLY' | 'YEARLY'
      /** @example  */
      executeTime: string
      /** @example 2026-04-06T19:51:35.370Z */
      executeDate: string
      /** @example  */
      weekday?: number
      /** @example  */
      day?: number
      /** @example  */
      month?: number
      /**
       * Format: date-time
       * @example 2026-04-08T14:26:23.096Z
       */
      startDate?: string
      /**
       * Format: date-time
       * @example 2026-07-31T05:51:37.370Z
       */
      untilDate?: string
      /** @example true */
      isActive?: boolean
    }
    NotificationRequestCreateDto: {
      /**
       * @example SMS
       * @enum {string}
       */
      channel: 'SMS' | 'EMAIL' | 'WHATAPP'
      /**
       * @example TEXT
       * @enum {string}
       */
      type: 'TEXT' | 'REFERRENCE'
      /** @example  */
      refId?: number
      /**
       * @example TEXT
       * @enum {string}
       */
      refType?: 'TEXT'
      title: components['schemas']['RequestSentenceDto']
      description: components['schemas']['RequestParagraphDto']
      content: components['schemas']['RequestContentDto']
      /** @example true */
      isActive?: boolean
      pushes?: components['schemas']['NotificationPushCreateDto'][]
      groupIds?: number[]
    }
    NotificationRequestUpdateDto: {
      /** @example  */
      refId?: number
      /**
       * @example TEXT
       * @enum {string}
       */
      refType?: 'TEXT'
      title: components['schemas']['RequestSentenceDto']
      description: components['schemas']['RequestParagraphDto']
      content: components['schemas']['RequestContentDto']
      /** @example true */
      isActive?: boolean
      pushes?: components['schemas']['NotificationPushCreateDto'][]
      groupIds?: number[]
    }
    PushResponseListDto: {
      /** @example 2 */
      id: number
      /** @example 5 */
      notificationId: number
      /** @example DAILY */
      type: string
      /** @example COMPLETED */
      status: string
      /** @example 2025-08-17T12:55:21.604Z */
      executeTime: string
      /** @example 2025-08-08T05:07:12.357Z */
      executeDate: string
      /** @example 1 */
      weekday: number
      /** @example 1 */
      day: number
      /** @example 1 */
      month: number
      /**
       * Format: date-time
       * @example 2025-05-25T15:41:43.175Z
       */
      startDate: string
      /**
       * Format: date-time
       * @example 2025-01-02T23:18:49.682Z
       */
      untilDate: string
      /** @example 1 */
      retries: number
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @example 2026-01-02T05:38:55.556Z
       */
      expiresAt: string
      /**
       * Format: date-time
       * @example 2025-11-20T12:49:02.390Z
       */
      scheduledAt: string
      /**
       * Format: date-time
       * @example 2025-07-13T01:58:28.609Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-29T07:25:19.037Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
      notification: Record<string, never>
    }
    PushResponseDetailDto: {
      /** @example 2 */
      id: number
      /** @example 5 */
      notificationId: number
      /** @example DAILY */
      type: string
      /** @example COMPLETED */
      status: string
      /** @example 2025-08-17T12:55:21.604Z */
      executeTime: string
      /** @example 2025-08-08T05:07:12.357Z */
      executeDate: string
      /** @example 1 */
      weekday: number
      /** @example 1 */
      day: number
      /** @example 1 */
      month: number
      /**
       * Format: date-time
       * @example 2025-05-25T15:41:43.175Z
       */
      startDate: string
      /**
       * Format: date-time
       * @example 2025-01-02T23:18:49.682Z
       */
      untilDate: string
      /** @example 1 */
      retries: number
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @example 2026-01-02T05:38:55.556Z
       */
      expiresAt: string
      /**
       * Format: date-time
       * @example 2025-11-20T12:49:02.390Z
       */
      scheduledAt: string
      /**
       * Format: date-time
       * @example 2025-07-13T01:58:28.609Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-29T07:25:19.037Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
      notification: Record<string, never>
    }
    PushRequestCreateDto: {
      /** @example 1 */
      notificationId: number
      /**
       * @example INSTANT
       * @enum {string}
       */
      type: 'INSTANT' | 'DATETIME' | 'DAILY' | 'WEEKLY' | 'MONTHLY' | 'YEARLY'
      /** @example  */
      executeTime: string
      /** @example 2026-04-06T19:51:35.370Z */
      executeDate: string
      /** @example  */
      weekday?: number
      /** @example  */
      day?: number
      /** @example  */
      month?: number
      /**
       * Format: date-time
       * @example 2026-04-08T14:26:23.096Z
       */
      startDate?: string
      /**
       * Format: date-time
       * @example 2026-07-31T05:51:37.370Z
       */
      untilDate?: string
      /** @example true */
      isActive?: boolean
    }
    PushRequestUpdateDto: {
      /** @example 1 */
      notificationId: number
      /**
       * @example INSTANT
       * @enum {string}
       */
      type: 'INSTANT' | 'DATETIME' | 'DAILY' | 'WEEKLY' | 'MONTHLY' | 'YEARLY'
      /** @example  */
      executeTime: string
      /** @example 2026-04-06T19:51:35.370Z */
      executeDate: string
      /** @example  */
      weekday?: number
      /** @example  */
      day?: number
      /** @example  */
      month?: number
      /**
       * Format: date-time
       * @example 2026-04-08T14:26:23.096Z
       */
      startDate?: string
      /**
       * Format: date-time
       * @example 2026-07-31T05:51:37.370Z
       */
      untilDate?: string
      /** @example true */
      isActive?: boolean
    }
    MediaResponseListDto: {
      /** @example 6 */
      id: number
      /**
       * @example BANNER
       * @enum {string}
       */
      type: 'BANNER' | 'SLIDER'
      /** @example https://picsum.photos/seed/XfQQJ/1157/2959 */
      url: string
      /** @example  */
      mime: string
      title: components['schemas']['ResponseLocaleDto']
      brief: components['schemas']['ResponseLocaleDto']
      /** @example  */
      refType: string
      /** @example  */
      refValue: string
      /** @example 0 */
      sorting: number
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @example 2025-05-19T18:12:57.673Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-30T05:47:00.953Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
    }
    MediaResponseDetailDto: {
      /** @example 6 */
      id: number
      /**
       * @example BANNER
       * @enum {string}
       */
      type: 'BANNER' | 'SLIDER'
      /** @example https://picsum.photos/seed/XfQQJ/1157/2959 */
      url: string
      /** @example  */
      mime: string
      title: components['schemas']['ResponseLocaleDto']
      brief: components['schemas']['ResponseLocaleDto']
      /** @example  */
      refType: string
      /** @example  */
      refValue: string
      /** @example 0 */
      sorting: number
      /** @example true */
      isActive: boolean
      /**
       * Format: date-time
       * @example 2025-05-19T18:12:57.673Z
       */
      createdAt: string
      /**
       * Format: date-time
       * @example 2025-08-30T05:47:00.953Z
       */
      updatedAt: string
      createdBy: components['schemas']['UserBelongInfo']
      updatedBy: components['schemas']['UserBelongInfo']
      deletedBy: components['schemas']['UserBelongInfo']
      assignedBy: components['schemas']['UserBelongInfo']
    }
    MediaRequestCreateDto: {
      /**
       * @example BANNER
       * @enum {string}
       */
      type: 'BANNER' | 'SLIDER'
      title: components['schemas']['RequestSentenceDto']
      brief: components['schemas']['RequestSentenceDto']
      /** @example 0 */
      sorting: number
      /**
       * @example TEXT
       * @enum {string}
       */
      refType?: 'TEXT'
      /** @example  */
      refValue?: string
      /** @example true */
      isActive?: boolean
      /** Format: binary */
      url?: string
    }
    MediaRequestUpdateDto: {
      /**
       * @example BANNER
       * @enum {string}
       */
      type: 'BANNER' | 'SLIDER'
      title: components['schemas']['RequestSentenceDto']
      brief: components['schemas']['RequestSentenceDto']
      /** @example 0 */
      sorting: number
      /**
       * @example TEXT
       * @enum {string}
       */
      refType?: 'TEXT'
      /** @example  */
      refValue?: string
      /** @example true */
      isActive?: boolean
      /** Format: binary */
      url?: string
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  UserAuthController_signUp: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UserRequestSignUpDto']
        'application/x-www-form-urlencoded': components['schemas']['UserRequestSignUpDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['UserProfileResponseDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  UserAuthController_login: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UserRequestSignInDto']
        'application/x-www-form-urlencoded': components['schemas']['UserRequestSignInDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['AuthAccessResponseDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  UserAuthController_me: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['UserProfileResponseDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  UserAuthController_editProfile: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UserEditProfileRequestDto']
        'application/x-www-form-urlencoded': components['schemas']['UserEditProfileRequestDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['UserProfileResponseDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  UserAuthController_refresh: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['AuthRefreshResponseDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  UserAuthController_changePassword: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UserRequestChangePasswordDto']
        'application/x-www-form-urlencoded': components['schemas']['UserRequestChangePasswordDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['UserProfileResponseDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  UserAuthController_changeAvatar: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'multipart/form-data': components['schemas']['UserRequestChangeAvatarDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['UserProfileResponseDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  UserAuthController_confirmPassword: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UserVerifyPasswordRequestDto']
        'application/x-www-form-urlencoded': components['schemas']['UserVerifyPasswordRequestDto']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  UserAuthController_changeConfirmPassword: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UserRequestChangeConfirmPasswordDto']
        'application/x-www-form-urlencoded': components['schemas']['UserRequestChangeConfirmPasswordDto']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  SettingAdminController_getUserMaxCertificate: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['SettingCoreResponseDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  SettingAdminController_clean: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  SettingAdminController_list: {
    parameters: {
      query?: {
        /** @description Group */
        group?: 'SYSTEM' | 'APP_VERSION' | 'OPEN_WORK'
      }
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['SettingResponseListDto'][]
          } & components['schemas']['ResponseListingDto']
        }
      }
    }
  }
  SettingAdminController_get: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        /** @description setting id */
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['SettingResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  SettingAdminController_update: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        /** @description setting id */
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['SettingRequestUpdateDto']
        'application/x-www-form-urlencoded': components['schemas']['SettingRequestUpdateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['SettingResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  DashboardAdminController_get: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['DashboardSummaryResponseDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  DashboardAdminController_refresh: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['DashboardSummaryResponseDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  DashboardAdminController_viewDataList: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['DashboardSummaryResponseDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  ApiKeyAdminController_list: {
    parameters: {
      query?: {
        isActive?: boolean
        type?: 'SYSTEM' | 'CLIENT' | 'DEFAULT'
        /** @description Data per page */
        perPage?: number
        /** @description Page number */
        page?: number
        /** @description Order by base on metadata.availableOrderBy */
        orderBy?: string
      }
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ApiKeyResponseListDto'][]
          } & components['schemas']['ResponsePagingDto']
        }
      }
    }
  }
  ApiKeyAdminController_create: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ApiKeyRequestCreateDto']
        'application/x-www-form-urlencoded': components['schemas']['ApiKeyRequestCreateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ApiKeyResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  ApiKeyAdminController_mapShorted: {
    parameters: {
      query?: {
        type?: 'SYSTEM' | 'CLIENT' | 'DEFAULT'
        isActive?: boolean
      }
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ApiKeyResponseListDto'][]
          } & components['schemas']['ResponseListingDto']
        }
      }
    }
  }
  ApiKeyAdminController_get: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ApiKeyResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  ApiKeyAdminController_update: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ApiKeyRequestUpdateDto']
        'application/x-www-form-urlencoded': components['schemas']['ApiKeyRequestUpdateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ApiKeyResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  ApiKeyAdminController_delete: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  ApiKeyAdminController_reset: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ApiKeyResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  ApiKeyAdminController_renew: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ApiKeyRequestRenewDto']
        'application/x-www-form-urlencoded': components['schemas']['ApiKeyRequestRenewDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ApiKeyResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  ApiKeyAdminController_inactive: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ApiKeyResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  ApiKeyAdminController_active: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ApiKeyResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  AppVersionAdminController_list: {
    parameters: {
      query?: {
        /** @description Data per page */
        perPage?: number
        /** @description Page number */
        page?: number
        /** @description Order by base on metadata.availableOrderBy */
        orderBy?: string
      }
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['AppVersionResponseListDto'][]
          } & components['schemas']['ResponsePagingDto']
        }
      }
    }
  }
  AppVersionAdminController_create: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AppVersionRequestCreateDto']
        'application/x-www-form-urlencoded': components['schemas']['AppVersionRequestCreateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['AppVersionResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  AppVersionAdminController_get: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['AppVersionResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  AppVersionAdminController_update: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AppVersionRequestUpdateDto']
        'application/x-www-form-urlencoded': components['schemas']['AppVersionRequestUpdateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['AppVersionResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  AppVersionAdminController_delete: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  AppVersionAdminController_inactive: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['AppVersionResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  AppVersionAdminController_active: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['AppVersionResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  UserAdminController_list: {
    parameters: {
      query?: {
        roleId?: number
        phone?: string
        name?: string
        /** @description boolean value */
        isActive?: 'true' | 'false'
        /** @description Data per page */
        perPage?: number
        /** @description Page number */
        page?: number
        /** @description Order by base on metadata.availableOrderBy */
        orderBy?: string
      }
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['UserResponseListDto'][]
          } & components['schemas']['ResponsePagingDto']
        }
      }
    }
  }
  UserAdminController_create: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'multipart/form-data': components['schemas']['UserRequestCreateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['UserResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  UserAdminController_get: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['UserResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  UserAdminController_update: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UserRequestUpdateDto']
        'application/x-www-form-urlencoded': components['schemas']['UserRequestUpdateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['UserResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  UserAdminController_getLoginHistories: {
    parameters: {
      query: {
        month: number
        year: number
      }
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['UserResponseLoginHistoryDto'][]
          } & components['schemas']['ResponseListingDto']
        }
      }
    }
  }
  UserAdminController_changeAvatar: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'multipart/form-data': components['schemas']['UserRequestChangeAvatarDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['UserResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  RoleAdminController_list: {
    parameters: {
      query?: {
        isActive?: boolean
        /** @description Data per page */
        perPage?: number
        /** @description Page number */
        page?: number
      }
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['RoleResponseListDto'][]
          } & components['schemas']['ResponsePagingDto']
        }
      }
    }
  }
  RoleAdminController_create: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['RoleRequestCreateDto']
        'application/x-www-form-urlencoded': components['schemas']['RoleRequestCreateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['RoleResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  RoleAdminController_mapShorted: {
    parameters: {
      query: {
        isActive: components['schemas']['RequestFilterDto']
      }
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['RoleResponseListDto'][]
          } & components['schemas']['ResponseListingDto']
        }
      }
    }
  }
  RoleAdminController_new: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['RoleResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  RoleAdminController_get: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['RoleResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  RoleAdminController_update: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['RoleRequestUpdateDto']
        'application/x-www-form-urlencoded': components['schemas']['RoleRequestUpdateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['RoleResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  RoleAdminController_delete: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  RoleAdminController_active: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['RoleResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  RoleAdminController_inactive: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['RoleResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  PermissionAdminController_list: {
    parameters: {
      query: {
        isActive: components['schemas']['RequestFilterDto']
        isVisible: components['schemas']['RequestFilterDto']
      }
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['PermissionResponseListDto'][]
          } & components['schemas']['ResponseListingDto']
        }
      }
    }
  }
  MemberAdminController_list: {
    parameters: {
      query?: {
        phone?: string
        email?: string
        name?: string
        isActive?: boolean
        /** @description Data per page */
        perPage?: number
        /** @description Page number */
        page?: number
        /** @description Order by base on metadata.availableOrderBy */
        orderBy?: string
      }
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['MemberResponseListDto'][]
          } & components['schemas']['ResponsePagingDto']
        }
      }
    }
  }
  MemberAdminController_create: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'multipart/form-data': components['schemas']['MemberRequestCreateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['MemberResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  MemberAdminController_mapShorted: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['MemberResponseListDto'][]
          } & components['schemas']['ResponseListingDto']
        }
      }
    }
  }
  MemberAdminController_get: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['MemberResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  MemberAdminController_put: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['MemberRequestUpdateDto']
        'application/x-www-form-urlencoded': components['schemas']['MemberRequestUpdateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['MemberResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  MemberAdminController_inactive: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['MemberResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  MemberAdminController_active: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['MemberResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  MemberAdminController_update: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'multipart/form-data': components['schemas']['MemberChangeAvatarRequestDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['MemberResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  MemberAdminController_addPoint: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['MemberAddPointRequestDto']
        'application/x-www-form-urlencoded': components['schemas']['MemberAddPointRequestDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['MemberResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  TierHistoryAdminController_list: {
    parameters: {
      query?: {
        /** @description Data per page */
        perPage?: number
        /** @description Page number */
        page?: number
        /** @description Order by base on metadata.availableOrderBy */
        orderBy?: string
      }
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['TierHistoryResponseListDto'][]
          } & components['schemas']['ResponsePagingDto']
        }
      }
    }
  }
  TierHistoryAdminController_create: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['TierHistoryRequestCreateDto']
        'application/x-www-form-urlencoded': components['schemas']['TierHistoryRequestCreateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['TierHistoryResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  TierHistoryAdminController_get: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['TierHistoryResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  TierHistoryAdminController_update: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['TierHistoryRequestUpdateDto']
        'application/x-www-form-urlencoded': components['schemas']['TierHistoryRequestUpdateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['TierHistoryResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  TierHistoryAdminController_delete: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  PointHistoryAdminController_list: {
    parameters: {
      query?: {
        memberCode?: string
        /** @description Data per page */
        perPage?: number
        /** @description Page number */
        page?: number
        /** @description Order by base on metadata.availableOrderBy */
        orderBy?: string
      }
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['PointHistoryResponseListDto'][]
          } & components['schemas']['ResponsePagingDto']
        }
      }
    }
  }
  PointHistoryAdminController_create: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PointHistoryRequestCreateDto']
        'application/x-www-form-urlencoded': components['schemas']['PointHistoryRequestCreateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['PointHistoryResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  PointHistoryAdminController_get: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['PointHistoryResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  PointHistoryAdminController_update: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PointHistoryRequestUpdateDto']
        'application/x-www-form-urlencoded': components['schemas']['PointHistoryRequestUpdateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['PointHistoryResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  PointHistoryAdminController_delete: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  ProductHistoryAdminController_list: {
    parameters: {
      query?: {
        /** @description Data per page */
        perPage?: number
        /** @description Page number */
        page?: number
        /** @description Order by base on metadata.availableOrderBy */
        orderBy?: string
      }
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ProductHistoryResponseListDto'][]
          } & components['schemas']['ResponsePagingDto']
        }
      }
    }
  }
  ProductHistoryAdminController_create: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ProductHistoryRequestCreateDto']
        'application/x-www-form-urlencoded': components['schemas']['ProductHistoryRequestCreateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ProductHistoryResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  ProductHistoryAdminController_get: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ProductHistoryResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  ProductHistoryAdminController_update: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ProductHistoryRequestUpdateDto']
        'application/x-www-form-urlencoded': components['schemas']['ProductHistoryRequestUpdateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ProductHistoryResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  ProductHistoryAdminController_delete: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  ProductAdminController_list: {
    parameters: {
      query?: {
        isActive?: boolean
        price?: string
        /** @description Data per page */
        perPage?: number
        /** @description Page number */
        page?: number
      }
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ProductResponseListDto'][]
          } & components['schemas']['ResponsePagingDto']
        }
      }
    }
  }
  ProductAdminController_create: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'multipart/form-data': components['schemas']['ProductRequestCreateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ProductResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  ProductAdminController_mapShorted: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ProductResponseListDto'][]
          } & components['schemas']['ResponseListingDto']
        }
      }
    }
  }
  ProductAdminController_get: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ProductResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  ProductAdminController_update: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'multipart/form-data': components['schemas']['ProductRequestUpdateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ProductResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  ProductAdminController_delete: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  ProductBrandAdminController_list: {
    parameters: {
      query?: {
        /** @description Data per page */
        perPage?: number
        /** @description Page number */
        page?: number
        /** @description Order by base on metadata.availableOrderBy */
        orderBy?: string
      }
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ProductBrandResponseListDto'][]
          } & components['schemas']['ResponsePagingDto']
        }
      }
    }
  }
  ProductBrandAdminController_create: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ProductBrandRequestCreateDto']
        'application/x-www-form-urlencoded': components['schemas']['ProductBrandRequestCreateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ProductBrandResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  ProductBrandAdminController_get: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ProductBrandResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  ProductBrandAdminController_update: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ProductBrandRequestUpdateDto']
        'application/x-www-form-urlencoded': components['schemas']['ProductBrandRequestUpdateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ProductBrandResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  ProductBrandAdminController_delete: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  ProductCategoryAdminController_list: {
    parameters: {
      query?: {
        /** @description Data per page */
        perPage?: number
        /** @description Page number */
        page?: number
        /** @description Order by base on metadata.availableOrderBy */
        orderBy?: string
      }
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ProductCategoryResponseListDto'][]
          } & components['schemas']['ResponsePagingDto']
        }
      }
    }
  }
  ProductCategoryAdminController_create: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ProductCategoryRequestCreateDto']
        'application/x-www-form-urlencoded': components['schemas']['ProductCategoryRequestCreateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ProductCategoryResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  ProductCategoryAdminController_get: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ProductCategoryResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  ProductCategoryAdminController_update: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ProductCategoryRequestUpdateDto']
        'application/x-www-form-urlencoded': components['schemas']['ProductCategoryRequestUpdateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ProductCategoryResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  ProductCategoryAdminController_delete: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  ProductReviewAdminController_list: {
    parameters: {
      query?: {
        /** @description Data per page */
        perPage?: number
        /** @description Page number */
        page?: number
        /** @description Order by base on metadata.availableOrderBy */
        orderBy?: string
      }
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ProductReviewResponseListDto'][]
          } & components['schemas']['ResponsePagingDto']
        }
      }
    }
  }
  ProductReviewAdminController_create: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ProductReviewRequestCreateDto']
        'application/x-www-form-urlencoded': components['schemas']['ProductReviewRequestCreateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ProductReviewResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  ProductReviewAdminController_get: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ProductReviewResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  ProductReviewAdminController_update: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ProductReviewRequestUpdateDto']
        'application/x-www-form-urlencoded': components['schemas']['ProductReviewRequestUpdateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['ProductReviewResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  ProductReviewAdminController_delete: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  FactAdminController_list: {
    parameters: {
      query?: {
        type?: 'ABOUT_US' | 'PRIVACY' | 'TERM_AND_CONDITION'
        /** @description Data per page */
        perPage?: number
        /** @description Page number */
        page?: number
      }
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['FactResponseListDto'][]
          } & components['schemas']['ResponsePagingDto']
        }
      }
    }
  }
  FactAdminController_get: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['FactResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  FactAdminController_update: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['FactRequestUpdateDto']
        'application/x-www-form-urlencoded': components['schemas']['FactRequestUpdateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['FactResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  FactAdminController_active: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['FactResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  FactAdminController_inactive: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['FactResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  TierAdminController_list: {
    parameters: {
      query?: {
        /** @description Data per page */
        perPage?: number
        /** @description Page number */
        page?: number
      }
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['TierResponseListDto'][]
          } & components['schemas']['ResponsePagingDto']
        }
      }
    }
  }
  TierAdminController_mapShorted: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['TierResponseListDto'][]
          } & components['schemas']['ResponseListingDto']
        }
      }
    }
  }
  TierAdminController_get: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['TierResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  TierAdminController_update: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['TierRequestUpdateDto']
        'application/x-www-form-urlencoded': components['schemas']['TierRequestUpdateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['TierResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  OrderAdminController_list: {
    parameters: {
      query?: {
        /** @description Data per page */
        perPage?: number
        /** @description Page number */
        page?: number
        /** @description Order by base on metadata.availableOrderBy */
        orderBy?: string
      }
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['OrderResponseListDto'][]
          } & components['schemas']['ResponsePagingDto']
        }
      }
    }
  }
  OrderAdminController_create: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['OrderRequestCreateDto']
        'application/x-www-form-urlencoded': components['schemas']['OrderRequestCreateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['OrderResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  OrderAdminController_get: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['OrderResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  OrderAdminController_update: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['OrderRequestUpdateDto']
        'application/x-www-form-urlencoded': components['schemas']['OrderRequestUpdateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['OrderResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  OrderAdminController_delete: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  InvoiceAdminController_list: {
    parameters: {
      query?: {
        /** @description Data per page */
        perPage?: number
        /** @description Page number */
        page?: number
        /** @description Order by base on metadata.availableOrderBy */
        orderBy?: string
      }
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['InvoiceResponseListDto'][]
          } & components['schemas']['ResponsePagingDto']
        }
      }
    }
  }
  InvoiceAdminController_create: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['InvoiceRequestCreateDto']
        'application/x-www-form-urlencoded': components['schemas']['InvoiceRequestCreateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['InvoiceResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  InvoiceAdminController_get: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['InvoiceResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  InvoiceAdminController_update: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['InvoiceRequestUpdateDto']
        'application/x-www-form-urlencoded': components['schemas']['InvoiceRequestUpdateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['InvoiceResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  InvoiceAdminController_delete: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  NotificationAdminController_list: {
    parameters: {
      query?: {
        /** @description Data per page */
        perPage?: number
        /** @description Page number */
        page?: number
        /** @description Order by base on metadata.availableOrderBy */
        orderBy?: string
      }
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['NotificationResponseListDto'][]
          } & components['schemas']['ResponsePagingDto']
        }
      }
    }
  }
  NotificationAdminController_create: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['NotificationRequestCreateDto']
        'application/x-www-form-urlencoded': components['schemas']['NotificationRequestCreateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['NotificationResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  NotificationAdminController_get: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['NotificationResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  NotificationAdminController_update: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['NotificationRequestUpdateDto']
        'application/x-www-form-urlencoded': components['schemas']['NotificationRequestUpdateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['NotificationResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  NotificationAdminController_delete: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  NotificationAdminController_inactive: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['NotificationResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  NotificationAdminController_active: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['NotificationResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  PushAdminController_list: {
    parameters: {
      query?: {
        /** @description Data per page */
        perPage?: number
        /** @description Page number */
        page?: number
        /** @description Order by base on metadata.availableOrderBy */
        orderBy?: string
      }
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['PushResponseListDto'][]
          } & components['schemas']['ResponsePagingDto']
        }
      }
    }
  }
  PushAdminController_create: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PushRequestCreateDto']
        'application/x-www-form-urlencoded': components['schemas']['PushRequestCreateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['PushResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  PushAdminController_get: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['PushResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  PushAdminController_update: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PushRequestUpdateDto']
        'application/x-www-form-urlencoded': components['schemas']['PushRequestUpdateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['PushResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  PushAdminController_delete: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  PushAdminController_inactive: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['PushResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  PushAdminController_active: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['PushResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  MediaAdminController_list: {
    parameters: {
      query?: {
        /** @description Data per page */
        perPage?: number
        /** @description Page number */
        page?: number
        /** @description Order by base on metadata.availableOrderBy */
        orderBy?: string
      }
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['MediaResponseListDto'][]
          } & components['schemas']['ResponsePagingDto']
        }
      }
    }
  }
  MediaAdminController_create: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'multipart/form-data': components['schemas']['MediaRequestCreateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['MediaResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  MediaAdminController_get: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['MediaResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  MediaAdminController_update: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['MediaRequestUpdateDto']
        'application/x-www-form-urlencoded': components['schemas']['MediaRequestUpdateDto']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data?: components['schemas']['MediaResponseDetailDto']
          } & components['schemas']['ResponseDataDto']
        }
      }
    }
  }
  MediaAdminController_delete: {
    parameters: {
      query?: never
      header?: {
        'x-language'?: 'en' | 'vi'
        /** @description Timezone header */
        'x-timezone'?: 'UTC' | 'Asia/Ho_Chi_Minh'
      }
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
}
